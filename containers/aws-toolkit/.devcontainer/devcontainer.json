{
	"name": "AWS Toolkit",
	"build": {
		"dockerfile": "Dockerfile",
		// [Optional] You can use build args to set options. e.g. 'VARIANT' below affects the image in the Dockerfile
		"args": {
			"VARIANT": "buster",
			"INSTALL_AWS_CLI": "true",
			"INSTALL_SAM": "true",
			"INSTALL_NODEJS": "true",
			"PYTHON_VERSION": "3.8"
		}
	},

	// Set *default* container specific settings.json values on container create.
	"settings": {},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": ["amazonwebservices.aws-toolkit-vscode"],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Comment out if you don't need CDK to be installed in the container.
	"postCreateCommand": "sudo npm i -g aws-cdk",

	"mounts": [
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
		"source=${localEnv:HOME}${localEnv:USERPROFILE}/.aws,target=/home/vscode/.aws,type=bind,consistency=cached"
		// Uncomment this line to forward your .ssh folder to the container.
		// "source=${localEnv:HOME}${localEnv:USERPROFILE}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached"
	],

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Comment out connect as root instead. To add a non-root user, see: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
